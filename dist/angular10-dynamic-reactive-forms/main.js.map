{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n  dynamicForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.dynamicForm = this.formBuilder.group({\n      numberOfUsers: ['', Validators.required],\n      users: new FormArray([])\n    });\n  }\n\n  get f() { return this.dynamicForm.controls; }\n  get t() { return this.f.users as FormArray; }\n  get userFormGroups() { return this.t.controls as FormGroup[]; }\n\n  onChangeUsers(e) {\n    const numberOfUsers = e.target.value || 0;\n    if (this.t.length < numberOfUsers) {\n      for (let i = this.t.length; i < numberOfUsers; i++) {\n        this.t.push(this.formBuilder.group({\n          firstName: ['', Validators.required],\n          lastName: ['', Validators.required],\n          username: ['', Validators.required],\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', Validators.required],\n          confirmPassword: ['', Validators.required]\n        }));\n      }\n    }\n    else {\n      for (let i = this.t.length; i >= numberOfUsers; i--) {\n        this.t.removeAt(i);\n      }\n    }\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.dynamicForm.invalid)\n      return;\n    alert('SUCCESS!!!' + JSON.stringify(this.dynamicForm.value, null, 4));\n  }\n\n  onReset(){\n    this.submitted = false;\n    this.dynamicForm.reset();\n    this.t.clear();\n  }\n\n  onClear() {\n    this.submitted = false;\n    this.t.reset();\n  }\n\n  showHideForm() {}\n}\n","<form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"card m-3\">\n    <h5 class=\"card-header\" style=\"text-align: center;\">Angular 10 Dynamic Reactive Forms Example</h5>\n    <div class=\"card-body border-bottom\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label>Number of Users</label>\n          <select formControlName=\"numberOfUsers\" class=\"form-control\" (change)=\"onChangeUsers($event)\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.numberOfUsers.errors }\">\n            <option value=\"\"></option>\n            <option *ngFor=\"let i of [1,2,3,4,5,6,7,8,9,10]\">{{i}}</option>\n          </select>\n          <div *ngIf=\"submitted && f.numberOfUsers.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.numberOfUsers.errors.required\">Number of Users is required</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngFor=\"let user of userFormGroups; let i = index\" class=\"list-group list-group-flush\">\n      <div class=\"list-group-item\">\n        <h5 class=\"card-title\">\n          User {{i + 1}} \n          <button class=\"btn btn-primary mr-1\" style=\"margin-left: 20px;\"> Show/Hide </button>\n        </h5>\n        <div [formGroup]=\"user\" class=\"form-row\">\n          <div class=\"form-group col-6\">\n            <label>First Name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && user.controls.firstName.errors }\" />\n            <div *ngIf=\"submitted && user.controls.firstName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"user.controls.firstName.errors.required\">First Name is required</div>\n            </div>\n          </div>\n          <div class=\"form-group col-6\">\n            <label>Last Name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && user.controls.lastName.errors }\" />\n            <div *ngIf=\"submitted && user.controls.lastName.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"user.controls.lastName.errors.required\">Last Name is required</div>\n            </div>\n          </div>\n          <div class=\"form-group col-3\">\n            <label>User Name</label>\n            <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && user.controls.username.errors }\" />\n            <div *ngIf=\"submitted && user.controls.username.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"user.controls.username.errors.required\">UserName is required</div>\n            </div>\n          </div>\n          <div class=\"form-group col-3\">\n            <label>Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && user.controls.email.errors }\" />\n            <div *ngIf=\"submitted && user.controls.email.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"user.controls.email.errors.required\">Email is required</div>\n              <div *ngIf=\"user.controls.email.errors.email\">Email must be a valid email address</div>\n            </div>\n          </div>\n          <div class=\"form-group col-3\">\n            <label>Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && user.controls.password.errors }\" />\n            <div *ngIf=\"submitted && user.controls.password.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"user.controls.password.errors.required\">Password is required</div>\n            </div>\n          </div>\n          <div class=\"form-group col-3\">\n            <label>Confirm Password</label>\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\n              [ngClass]=\"{ 'is-invalid': submitted && user.controls.confirmPassword.errors }\" />\n            <div *ngIf=\"submitted && user.controls.confirmPassword.errors\" class=\"invalid-feedback\">\n              <div *ngIf=\"user.controls.confirmPassword.errors.required\">Confirm Password is required</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-footer text-center border-top-0\">\n      <button class=\"btn btn-primary mr-1\">Register Users</button>\n      <button class=\"btn btn-secondary mr-1\" type=\"reset\" (click)=\"onReset()\">Reset</button>\n      <button class=\"btn btn-secondary\" type=\"button\" (click)=\"onClear()\">Clear</button>\n    </div>\n  </div>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}